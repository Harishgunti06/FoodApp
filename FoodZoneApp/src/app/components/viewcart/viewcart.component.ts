import { Component } from '@angular/core';
import { CustomerService } from '../../services/customer.service';
import { ICart } from '../../models/cart';
import { IMenuItem } from '../../models/menuItem';
import { Router } from '@angular/router';
import { SharedService } from '../../services/shared.service';


@Component({
  selector: 'app-viewcart',
  templateUrl: './viewcart.component.html',
  styleUrls: ['./viewcart.component.css']
})
export class ViewcartComponent {
  cartItems: ICart[] = [];
  constructor(private _customerService: CustomerService, private _router: Router   , private _sharedService: SharedService) { }
  ngOnInit() {
    this._customerService.getCartItems().subscribe(
      (resSuccess) => { this.cartItems = resSuccess },
      (resError) => { this.cartItems=[] },
      () => { console.log("Cart Items Feteched"); }

    )

  }
  getTotal(): number {
    return this.cartItems.reduce((sum, item) => sum + (item.quantity * item.price), 0);
  }


    placeOrder(cartItems: ICart[]): void {
      const email = sessionStorage.getItem('userName') || '';
      // Attach email to each item if needed by the API
      const orderItems = cartItems.map(item => ({
        orderItemId: 0, // Assuming orderItemId is auto-generated by the server
        email: email,
        menuItemId: item.menuItemId,
        price: item.price,
        itemName: item.itemName,
        quantity: item.quantity,

      }));
      this._customerService.AddToOrder(orderItems).subscribe(
         (resSuccess) => {
          alert('Order Placed Successfully');
          this._router.navigate(['/view-orders']);
        },
         (resError) => {
           console.error(resError);
        },
        () => {
          console.log('Order placement request completed.');
        }
      );
  }
  removeFromCart(id: number) {
    console.log(id);
    this._customerService.removeFromCart(id).subscribe(

      (resSuccess) => {
        this.ngOnInit();
        alert("Item Removed Successfully")

      },
      (resError) => { console.error(resError); },
      () => { console.log("Item Removed from Cart"); }
    );
  }
  goToDeliveryDetails(cartItems: any[]): void {
    const subtotal = this.getTotal();
    this._sharedService.setCartItems(this.cartItems);
    this._router.navigate(['/delivery-details'], {
      state: { subtotal: subtotal }
    });
  }
  goBack() {
    this._router.navigate(['/customer']);
  }  
}
